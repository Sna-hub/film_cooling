/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2312                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.001;

vertices
(
    (0 0 0)               //v0
	(635 0 0)             //v1
	(635 158.75 0)            //v2
	(0 158.75 0)              //v3
	
	(-6.35 158.75 0)        //v4
	(-158.75 158.75 0)            //v5
	(-158.75 0 0)             //v6
	(-6.35 0 0)         //v7
	(-6.35 -20 0)   //v8
	(0 -20 0)   //v9
	
	(0 0 2)                  //v10
	(635 0 2)                //v11
	(635 158.75 2)            //v12
	(0 158.75 2)              //v13
	(-6.35 158.75 2)         //v14
	(-158.75 158.75 2)        //v15
	(-158.75 0 2)             //v16
	(-6.35 0 2)      //v17
	(-6.35 -20 2)   //v18
	(0 -20 2)       //v19
	
);

blocks
(
    hex (0 1 2 3 10 11 12 13) (220 65 1) simpleGrading (20 -0.09 1)  //  Mesh refinement
	
	hex (7 0 3 4 17 10 13 14) (10 65 1) simpleGrading (1 -0.09 1)
	
	hex (6 7 4 5 16 17 14 15) (45 65 1) simpleGrading (0.1 -0.09 1)
	
	hex (8 9 0 7 18 19 10 17) (10 18 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(   
 
    inlet_gas
    {
        type patch;
        faces
        (
            (15 5 6 16)
        );
    }
    inlet_coolant
    {
        type patch;
        faces
        (
            (18 8 9 19)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (12 2 1 11)
        );
    } 
	topwall
    {
        type symmetryPlane;
        faces
        (
            (15 5 4 14)
			(14 4 3 13)
			(13 3 2 12)
        );
    } 
	bottom_plate
    {
        type wall;
        faces
        (
            (16 6 7 17)
			(10 0 1 11)
        );
    } 
	hole_wall
    {
        type wall;
        faces
        (
            (17 7 8 18)
			(10 0 9 19)
        );
    }
    frontAndBack
        {
            type empty;
            faces
            (
                (5 6 7 4)
    			(4 7 0 3)
    			(7 8 9 0)
    			(15 16 17 14)
    			(14 17 10 13)
                (17 18 19 10)
				(3 0 1 2)
				(13 10 11 12)

            );
        }
);

mergePatchPairs
(
);


// ************************************************************************* //
